#!/bin/sh

shout() { echo "$0: $*" >&2; }  # Just echo an error and the program name
barf() { shout "$*"; exit 111; }
safe() { "$@" || barf "cannot $*"; }

# =============================================================================
# Post-install hook file for configuring dotcloud server

mkdir ../data

echo "Writing the local settings file..."
cat >> src/project/local_settings.py <<EOF

import json
with open('/home/dotcloud/environment.json') as f:
    env = json.load(f)

DATABASES = {
    'default': {
        'ENGINE': 'django.contrib.gis.db.backends.postgis',
        'NAME': 'shareabouts',
        'USER': env['DOTCLOUD_DB_SQL_LOGIN'],
        'PASSWORD': env['DOTCLOUD_DB_SQL_PASSWORD'],
        'HOST': env['DOTCLOUD_DB_SQL_HOST'],
        'PORT': int(env['DOTCLOUD_DB_SQL_PORT']),
    }
}

CACHES = {
    "default": {
        "BACKEND": "redis_cache.cache.RedisCache",
        "LOCATION": "%s:%s:1" % (env['DOTCLOUD_CACHE_REDIS_HOST'],
                                 env['DOTCLOUD_CACHE_REDIS_PORT']),
        "OPTIONS": {
            "CLIENT_CLASS": "redis_cache.client.DefaultClient",
            "PASSWORD": env['DOTCLOUD_CACHE_REDIS_PASSWORD'],
        }
    }
}

SESSION_ENGINE = "django.contrib.sessions.backends.cache"

STATIC_ROOT = '/home/dotcloud/current/static/'

# Debug is False by default, true if set in the environment.
DEBUG = (env.get('DEBUG', 'False') in ['true', 'True'])
TEMPLATE_DEBUG = DEBUG

ATTACHMENT_STORAGE = 'storages.backends.s3boto.S3BotoStorage'
AWS_ACCESS_KEY_ID = env['SHAREABOUTS_AWS_KEY']
AWS_SECRET_ACCESS_KEY = env['SHAREABOUTS_AWS_SECRET']
AWS_STORAGE_BUCKET_NAME = env['SHAREABOUTS_AWS_BUCKET']
AWS_QUERYSTRING_AUTH = False

# Set these explicitly here to override whatever may have come from settings
DEFAULT_FILE_STORAGE = 'django.core.files.storage.FileSystemStorage'
STATICFILES_STORAGE = 'django.contrib.staticfiles.storage.StaticFilesStorage'
STATIC_URL = '/static/'

LAUNCHROCK_KEY = env.get('SHAREABOUTS_LAUNCHROCK_KEY')

ADMINS = (
    ('Shareabouts API Admin', env.get('SHAREABOUTS_ADMIN_EMAIL')),
)

LOGGING = {
    'version': 1,
    'disable_existing_loggers': False,
    'filters': {
        'require_debug_false': {
            '()': 'django.utils.log.RequireDebugFalse'
        }
    },
    'formatters': {
        'verbose': {
            'format': '%(levelname)s %(asctime)s %(name)s: %(message)s %(process)d %(thread)d'
        },
        'moderate': {
            'format': '%(levelname)s %(asctime)s %(name)s: %(message)s'
        },
        'simple': {
            'format': '%(levelname)s %(message)s'
        },
    },
    'handlers': {
        'mail_admins': {
            'level': 'ERROR',
            'filters': ['require_debug_false'],
            'class': 'django.utils.log.AdminEmailHandler'
        },
        'console': {
            'level': 'DEBUG',
            'class': 'logging.StreamHandler',
            'formatter': 'moderate'
        },
        'debug_file': {
            'level': 'DEBUG',
            'class': 'logging.handlers.TimedRotatingFileHandler',
            'formatter': 'verbose',

            'filename': '/home/dotcloud/data/debug.log',
            'backupCount': 7,
            'when': 'midnight',
        },
    },
    'loggers': {
        'django.request': {
            'handlers': ['mail_admins'],
            'level': 'ERROR',
            'propagate': True,
        },

        'django.db.backends': {
            'handlers': ['debug_file'],
            'level': 'DEBUG',
            'propagate': True,
        },

        'utils.request_timer': {
            'handlers': ['debug_file'],
            'level': 'DEBUG',
            'propagate': True,
        },

        'storages': {
            'handlers': ['debug_file'],
            'level': 'DEBUG',
            'propagate': True,
        },

        'redis_cache': {
            'handlers': ['debug_file'],
            'level': 'DEBUG',
            'propagate': True,
        },
   }
}
EOF

# Need to be able to import settings to run the createdbs script...
echo VIRTUAL_ENV is "$VIRTUAL_ENV"
echo PYTHONPATH is "$PYTHONPATH"
export PYTHONPATH=$PYTHONPATH:$PWD/src/
export DJANGO_SETTINGS_MODULE=project.settings
echo "Creating database if needed..."
safe python src/scripts/dotcloud_createdbs.py

echo "Syncing the database..."
safe src/manage.py syncdb --migrate --noinput

echo "Setting up static file service..."
safe src/manage.py collectstatic --noinput

echo "Configuring nginx to serve static files..."
cat >> nginx.conf <<EOF
location /static/ { root /home/dotcloud/current ; }
EOF
